###########################################################
# USEFUL VARIOUS TOOLS 
# L. LAURENT - 2020 - luc.laurent@lecnam.net
###########################################################

import importlib

###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
# function to load MUMPS library
def loadMumps():
    mumps_loader=importlib.util.find_spec('mumps')
    foundMumps=mumps_loader is not None
    if foundMumps:
        import mumps
    return foundMumps

###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
# function to obtain info concerning MPI
def mpiInfo():
    # default values
    nproc=1
    rank=0
    comm=None
    #try to import MPI    
    mpi4py_loader=importlib.util.find_spec('mpi4py')
    if mpi4py_loader is not None:
        from mpi4py import MPI
        comm = MPI.COMM_WORLD
        nproc = comm.Get_size()
        rank = comm.Get_rank()
    else:
        print('No mpi4py.MPI module found')
        pass    
    return nproc, rank, comm

###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
# load communication to one processor for MUMPS
class comm_mumps_one_proc:
    rank = 0
    def py2f(self):
        return 0

###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
###########################################################
# function to prepare string (if empty)
def prepareStr(strIn):
    if strIn:
        strOut=strIn
    else:
        strOut='None'
    return strOut